class matrix: 
    #m = rows 
    #n = cols

    def __init__(self,rows, cols , data = []):
        self.rows = rows 
        self.cols = cols 
        
        if data: 
            self.data = data 
        else: 
            self.data = [0] * (self.rows * self.cols) 

    def __getitem__(self,key):
        i, j = key
        return self.data[(j-1) + (i - 1) * self.cols]

    def __setitem__(self, key, value):
        i, k = key  
        self.data[(j-1) + (i-1) * self.cols] = value

    def __add__(self, other):
        res = matrix(self.rows , self.cols) 

        for i in  range(1,self.rows + 1):
            for j in range(1,self.cols + 1):
                res[i, j] = self [i, j] + other [i, j]

        return res

    def __sub__(self, other):
        res = matrix(self.rows , self.cols) 

        for i in  range(1,self.rows + 1):
            for j in range(1,self.cols + 1):
                res[i, j] = self [i, j] - other [i, j]

        return res

    def __mult__(self, other):
        pass 

    def __truediv__(self, other):
        pass 

    def dot(self, other): 
        res = matrix(self.rows, other.cols) 

        for i in range(1,self.rows, + 1): 
            for j in range(1, other.cols + 1): 
                for k in range(1, self.cols + 1): 
                    res[i, j] = self[i, k] * other [k, j] + res[i,j] 
        
        return res 

    def _samesize_(self, other): 
        return  True if self.rows == other.rows and self.cols == other.cols else False 

